{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Ahmed Omar's Software Projects Latest Projects: FTPChat Overview FTPChat is a lightweight, encrypted messaging protocol implemented entirely in Python. It facilitates secure communication by reading and writing messages to a shared file hosted on an FTP server. FTPChat is specifically designed for deployment in legacy environments, including low-power routers equipped with USB and FTP capabilities. This makes it an ideal solution for resource-constrained scenarios or discreet operations. Key Features 24-layer encryption ensuring robust payload security File-based transport mechanism utilizing FTP Fully operational within a single .py file Optimized for legacy hardware and low-power devices Compatible with routers supporting USB and FTP Energy-efficient and environmentally conscious design Protocol Operation Messages are exchanged via a shared file on an FTP server. Each message contains a timestamp, username, and encrypted content. The protocol provides: Conflict-safe message writing Encrypted message formatting Lightweight, file-based communication Note: FTPChat does not support auto-refresh or background polling. Usage Instructions Download FtpChat.exe for Windows, or run the Python script on macOS or Linux. Activate your FTP server. Refer to Documentation/Quick Start Guide (Making FTP Server).md for detailed setup instructions. Enter your credentials as prompted. Please review the Notes Before Starting section prior to use. License FTPChat is distributed under a custom MIT-style license. Commercial use is strictly prohibited without written permission from the author. All rights to the name \u201cFTPChat\u201d and its protocol specification are reserved by Ahmed Omar Saad. For full license details, refer to the `LICENSE You can find its source code in this repository: https://github.com/ahmedomar2014/FTPChat, But don't forget to read the license\ud83d\ude09 Tlock Project Description Tlock is a project that encrypts text with 48 LAYERS OF ENCRYPTION and it can encrypt text and decrypt text, audio, picture, Python code, etc. Written in Python . You can download this project by pressing Here Tlock Powered Javascript (TJS) Description TJS is a Javascript IDE for Windows . That is powered by Tlock Features Free. Super Lightweight. Can run, save, and open Javascript code. You can run it without installation. You can make GUI apps. It can encode and decode your code. You can download this project by pressing Here Lite Integrated Development Environment (LIDE) Description LIDE is a python IDE for Windows . Features Free. Super Lightweight. Can run, save, and open python code. You can run it without installation. You can make GUI apps. You can download this project by pressing Here Tlock Powered Lite Integrated Development Environment (TLIDE) Description TLIDE is a python IDE for Windows . That is powered by Tlock Features Free. Super Lightweight. Can run, save, and open python code. You can run it without installation. You can make GUI apps. It can encode and decode your code. You can download this project by pressing Here Javascript Integrated Development Environment (JSIDE) Description JSIDE is a Javascript IDE for Windows . Features Free. Super Lightweight. Can run, save, and open Javascript code. You can run it without installation. You can make GUI apps. You can download this project by pressing Here AOSP To Do Project Description AOSP To Do is a to do app that powered by Tlock that it can encrypt to do list and decrypt to do list with 48 LAYERS OF ENCRYPTION . Written in Python You can download this project by pressing Here AOSP Javascript (AJS) Description AJS is a small superset of JavaScript that provides Python-like Syntax . Written in JavaScript How to use AJS ? To use AJS you should type // Example import { print } from \"./ajs.js\"; print(\"Hello, World!\"); // There are many other things to import like str, input, float, calculator You can download this project by pressing Here AOSP PROGRAMMING LANGUAGE (APL) Description AOSP is a programming language that is easy to learn with our new chatting protocol. Written in python Code Example from modules import console from modules import character_properties as charp from modules import randomizing as rndm from modules import accelerate from modules import operating_system from modules import mathematics def main(): console.show(f\"Running from {operating_system.get_project_running_path()}\") name = console.ask(\"What is your name?\\n\") console.show(f\"Hello {charp.capitalize_first_letter(name)}!\") num1 = rndm.integer(1, 11) num2 = rndm.integer(1, 11) result = mathematics.add(num1, num2) answer = console.ask(f\"Let's do some math!, What is {num1} + {num2}?\\n\") console.if_else( answer == result, \"from modules import console; console.show('Correct!')\", ) console.if_else( answer == result, \"from modules import console; console.show('Incorrect')\", ) age = console.ask(f\"Is your age {rndm.integer(9, 30)}?\\n\") console.if_else( age == \"no\", \"from modules import console; correct = console.ask('So how old are you?'); console.show(f'Ok, Thanks for using APL!')\", ) console.if_else( age == \"yes\", \"from modules import console; console.show('Thanks for using APL!')\", ) accelerate.joined_thread(main) You can download this project by pressing Here GIT File Pusher (GFT) Description GFT is a project that pushes files to a remote repository. It is designed to automate the process of pushing files to a remote repository Features File Pushing : GFT can push files to a remote repository. No Command Lines Needed : GFT does not require any command lines to be entered by the user. Sibha Project Description Sibha is a tasbeeh app that is written in Python You can download this project by pressing Here Keep In Touch! You can get help by contacting us by these ways: Phone Number: +201040946638 Email: ahmedomardev@outlook.com","title":"Ahmed Omar's Software Projects"},{"location":"#ahmed-omars-software-projects","text":"","title":"Ahmed Omar's Software Projects"},{"location":"#latest-projects","text":"","title":"Latest Projects:"},{"location":"#ftpchat","text":"","title":"FTPChat"},{"location":"#overview","text":"FTPChat is a lightweight, encrypted messaging protocol implemented entirely in Python. It facilitates secure communication by reading and writing messages to a shared file hosted on an FTP server. FTPChat is specifically designed for deployment in legacy environments, including low-power routers equipped with USB and FTP capabilities. This makes it an ideal solution for resource-constrained scenarios or discreet operations.","title":"Overview"},{"location":"#key-features","text":"24-layer encryption ensuring robust payload security File-based transport mechanism utilizing FTP Fully operational within a single .py file Optimized for legacy hardware and low-power devices Compatible with routers supporting USB and FTP Energy-efficient and environmentally conscious design","title":"Key Features"},{"location":"#protocol-operation","text":"Messages are exchanged via a shared file on an FTP server. Each message contains a timestamp, username, and encrypted content. The protocol provides: Conflict-safe message writing Encrypted message formatting Lightweight, file-based communication Note: FTPChat does not support auto-refresh or background polling.","title":"Protocol Operation"},{"location":"#usage-instructions","text":"Download FtpChat.exe for Windows, or run the Python script on macOS or Linux. Activate your FTP server. Refer to Documentation/Quick Start Guide (Making FTP Server).md for detailed setup instructions. Enter your credentials as prompted. Please review the Notes Before Starting section prior to use.","title":"Usage Instructions"},{"location":"#license","text":"FTPChat is distributed under a custom MIT-style license. Commercial use is strictly prohibited without written permission from the author. All rights to the name \u201cFTPChat\u201d and its protocol specification are reserved by Ahmed Omar Saad. For full license details, refer to the `LICENSE You can find its source code in this repository: https://github.com/ahmedomar2014/FTPChat, But don't forget to read the license\ud83d\ude09","title":"License"},{"location":"#tlock-project","text":"","title":"Tlock Project"},{"location":"#description","text":"Tlock is a project that encrypts text with 48 LAYERS OF ENCRYPTION and it can encrypt text and decrypt text, audio, picture, Python code, etc. Written in Python . You can download this project by pressing Here","title":"Description"},{"location":"#tlock-powered-javascript-tjs","text":"","title":"Tlock Powered Javascript (TJS)"},{"location":"#description_1","text":"TJS is a Javascript IDE for Windows . That is powered by Tlock","title":"Description"},{"location":"#features","text":"Free. Super Lightweight. Can run, save, and open Javascript code. You can run it without installation. You can make GUI apps. It can encode and decode your code. You can download this project by pressing Here","title":"Features"},{"location":"#lite-integrated-development-environment-lide","text":"","title":"Lite Integrated Development Environment (LIDE)"},{"location":"#description_2","text":"LIDE is a python IDE for Windows .","title":"Description"},{"location":"#features_1","text":"Free. Super Lightweight. Can run, save, and open python code. You can run it without installation. You can make GUI apps. You can download this project by pressing Here","title":"Features"},{"location":"#tlock-powered-lite-integrated-development-environment-tlide","text":"","title":"Tlock Powered Lite Integrated Development Environment (TLIDE)"},{"location":"#description_3","text":"TLIDE is a python IDE for Windows . That is powered by Tlock","title":"Description"},{"location":"#features_2","text":"Free. Super Lightweight. Can run, save, and open python code. You can run it without installation. You can make GUI apps. It can encode and decode your code. You can download this project by pressing Here","title":"Features"},{"location":"#javascript-integrated-development-environment-jside","text":"","title":"Javascript Integrated Development Environment (JSIDE)"},{"location":"#description_4","text":"JSIDE is a Javascript IDE for Windows .","title":"Description"},{"location":"#features_3","text":"Free. Super Lightweight. Can run, save, and open Javascript code. You can run it without installation. You can make GUI apps. You can download this project by pressing Here","title":"Features"},{"location":"#aosp-to-do-project","text":"","title":"AOSP To Do Project"},{"location":"#description_5","text":"AOSP To Do is a to do app that powered by Tlock that it can encrypt to do list and decrypt to do list with 48 LAYERS OF ENCRYPTION . Written in Python You can download this project by pressing Here","title":"Description"},{"location":"#aosp-javascript-ajs","text":"","title":"AOSP Javascript (AJS)"},{"location":"#description_6","text":"AJS is a small superset of JavaScript that provides Python-like Syntax . Written in JavaScript","title":"Description"},{"location":"#how-to-use-ajs","text":"To use AJS you should type // Example import { print } from \"./ajs.js\"; print(\"Hello, World!\"); // There are many other things to import like str, input, float, calculator You can download this project by pressing Here","title":"How to use AJS ?"},{"location":"#aosp-programming-language-apl","text":"","title":"AOSP PROGRAMMING LANGUAGE (APL)"},{"location":"#description_7","text":"AOSP is a programming language that is easy to learn with our new chatting protocol. Written in python","title":"Description"},{"location":"#code-example","text":"from modules import console from modules import character_properties as charp from modules import randomizing as rndm from modules import accelerate from modules import operating_system from modules import mathematics def main(): console.show(f\"Running from {operating_system.get_project_running_path()}\") name = console.ask(\"What is your name?\\n\") console.show(f\"Hello {charp.capitalize_first_letter(name)}!\") num1 = rndm.integer(1, 11) num2 = rndm.integer(1, 11) result = mathematics.add(num1, num2) answer = console.ask(f\"Let's do some math!, What is {num1} + {num2}?\\n\") console.if_else( answer == result, \"from modules import console; console.show('Correct!')\", ) console.if_else( answer == result, \"from modules import console; console.show('Incorrect')\", ) age = console.ask(f\"Is your age {rndm.integer(9, 30)}?\\n\") console.if_else( age == \"no\", \"from modules import console; correct = console.ask('So how old are you?'); console.show(f'Ok, Thanks for using APL!')\", ) console.if_else( age == \"yes\", \"from modules import console; console.show('Thanks for using APL!')\", ) accelerate.joined_thread(main)","title":"Code Example"},{"location":"#you-can-download-this-project-by-pressing-here","text":"","title":"You can download this project by pressing Here"},{"location":"#git-file-pusher-gft","text":"","title":"GIT File Pusher (GFT)"},{"location":"#description_8","text":"GFT is a project that pushes files to a remote repository. It is designed to automate the process of pushing files to a remote repository","title":"Description"},{"location":"#features_4","text":"File Pushing : GFT can push files to a remote repository. No Command Lines Needed : GFT does not require any command lines to be entered by the user.","title":"Features"},{"location":"#sibha-project","text":"","title":"Sibha Project"},{"location":"#description_9","text":"Sibha is a tasbeeh app that is written in Python You can download this project by pressing Here","title":"Description"},{"location":"#keep-in-touch","text":"You can get help by contacting us by these ways: Phone Number: +201040946638 Email: ahmedomardev@outlook.com","title":"Keep In Touch!"},{"location":"Quick%20Start%20Guide%20%28Making%20FTP%20Server%29/","text":"Quick Start Guide for FTPChat ( Making FTP Server ) Using ZTE ZXHN H188A SuperVectoring (Telecom Egypt) \u2014 FTP Server Setup Guide Transform your Telecom Egypt-issued H188A router into a USB-powered FTP server using its default functionality \u2014 no firmware flashing or OpenWRT required. \ud83e\uddf0 Requirements ZTE ZXHN H188A router (Telecom Egypt / WE) USB flash drive formatted as FAT32 or NTFS PC or server connected to the router (Windows or Linux) Router login credentials (default: admin / check label for password) \ud83d\udd0c Step 1: Prepare USB Storage Format the USB drive as FAT32 or NTFS. Create folders such as /Public , /Media , or /Shared . Insert the USB drive into the router\u2019s rear USB 2.0 port. Wait 10\u201320 seconds for detection. \ud83c\udf10 Step 2: Access Router Admin Panel Launch a browser and go to: http://192.168.1.1 . Log in with credentials: Username: admin Password: (found on router label) \u2699\ufe0f Step 3: Enable FTP Server Navigate to: Application > USB Storage > FTP Server . Enable the FTP service. Choose folders on the USB to share. Set access preferences: Anonymous (optional) User-based (recommended): Username: ftpuser Password: yourpassword Permission: Read/Write or Read-Only \ud83e\uddea Step 4: Test FTP Access Locally \ud83d\udda5\ufe0f Windows Open File Explorer Enter: ftp://192.168.1.1 in the address bar Enter credentials if prompted \ud83d\udda5\ufe0f Linux (with curl ) curl ftp://ftpuser:yourpassword@192.168.1.1/ \ud83d\udca1 Replace ftpuser and yourpassword with your actual login. The command lists shared folder contents. \ud83d\udcca FTP User & Network Capacity Interface Max Devices Notes 2.4 GHz Wi-Fi ~32 users Light browsing and file access 5 GHz Wi-Fi ~32 users Ideal for FTP and media streaming LAN Ports 3 devices Stable, high-speed transfers FTP Users 5\u201310 users Stable performance recommended \ud83e\udde0 For simultaneous large file transfers, prioritize LAN or 5 GHz. Performance may drop beyond ~10 active users. \u2705 Setup Complete Your router is now a functional FTP server, ready to share files across your local network. \ud83c\udf10 Additional Information ZTE ZXHN H188A SuperVectoring (Telecom Egypt): Purchase Link To acquire this device, Telecom Egypt partnership is required.","title":"Quick Start Guide for FTPChat (Making FTP Server)"},{"location":"Quick%20Start%20Guide%20%28Making%20FTP%20Server%29/#quick-start-guide-for-ftpchat-making-ftp-server","text":"","title":"Quick Start Guide for FTPChat (Making FTP Server)"},{"location":"Quick%20Start%20Guide%20%28Making%20FTP%20Server%29/#using-zte-zxhn-h188a-supervectoring-telecom-egypt-ftp-server-setup-guide","text":"Transform your Telecom Egypt-issued H188A router into a USB-powered FTP server using its default functionality \u2014 no firmware flashing or OpenWRT required.","title":"Using ZTE ZXHN H188A SuperVectoring (Telecom Egypt) \u2014 FTP Server Setup Guide"},{"location":"Quick%20Start%20Guide%20%28Making%20FTP%20Server%29/#requirements","text":"ZTE ZXHN H188A router (Telecom Egypt / WE) USB flash drive formatted as FAT32 or NTFS PC or server connected to the router (Windows or Linux) Router login credentials (default: admin / check label for password)","title":"\ud83e\uddf0 Requirements"},{"location":"Quick%20Start%20Guide%20%28Making%20FTP%20Server%29/#step-1-prepare-usb-storage","text":"Format the USB drive as FAT32 or NTFS. Create folders such as /Public , /Media , or /Shared . Insert the USB drive into the router\u2019s rear USB 2.0 port. Wait 10\u201320 seconds for detection.","title":"\ud83d\udd0c Step 1: Prepare USB Storage"},{"location":"Quick%20Start%20Guide%20%28Making%20FTP%20Server%29/#step-2-access-router-admin-panel","text":"Launch a browser and go to: http://192.168.1.1 . Log in with credentials: Username: admin Password: (found on router label)","title":"\ud83c\udf10 Step 2: Access Router Admin Panel"},{"location":"Quick%20Start%20Guide%20%28Making%20FTP%20Server%29/#step-3-enable-ftp-server","text":"Navigate to: Application > USB Storage > FTP Server . Enable the FTP service. Choose folders on the USB to share. Set access preferences: Anonymous (optional) User-based (recommended): Username: ftpuser Password: yourpassword Permission: Read/Write or Read-Only","title":"\u2699\ufe0f Step 3: Enable FTP Server"},{"location":"Quick%20Start%20Guide%20%28Making%20FTP%20Server%29/#step-4-test-ftp-access-locally","text":"","title":"\ud83e\uddea Step 4: Test FTP Access Locally"},{"location":"Quick%20Start%20Guide%20%28Making%20FTP%20Server%29/#windows","text":"Open File Explorer Enter: ftp://192.168.1.1 in the address bar Enter credentials if prompted","title":"\ud83d\udda5\ufe0f Windows"},{"location":"Quick%20Start%20Guide%20%28Making%20FTP%20Server%29/#linux-with-curl","text":"curl ftp://ftpuser:yourpassword@192.168.1.1/ \ud83d\udca1 Replace ftpuser and yourpassword with your actual login. The command lists shared folder contents.","title":"\ud83d\udda5\ufe0f Linux (with curl)"},{"location":"Quick%20Start%20Guide%20%28Making%20FTP%20Server%29/#ftp-user-network-capacity","text":"Interface Max Devices Notes 2.4 GHz Wi-Fi ~32 users Light browsing and file access 5 GHz Wi-Fi ~32 users Ideal for FTP and media streaming LAN Ports 3 devices Stable, high-speed transfers FTP Users 5\u201310 users Stable performance recommended \ud83e\udde0 For simultaneous large file transfers, prioritize LAN or 5 GHz. Performance may drop beyond ~10 active users.","title":"\ud83d\udcca FTP User &amp; Network Capacity"},{"location":"Quick%20Start%20Guide%20%28Making%20FTP%20Server%29/#setup-complete","text":"Your router is now a functional FTP server, ready to share files across your local network.","title":"\u2705 Setup Complete"},{"location":"Quick%20Start%20Guide%20%28Making%20FTP%20Server%29/#additional-information","text":"ZTE ZXHN H188A SuperVectoring (Telecom Egypt): Purchase Link To acquire this device, Telecom Egypt partnership is required.","title":"\ud83c\udf10 Additional Information"}]}